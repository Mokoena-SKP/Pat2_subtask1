//Morse code function

//Aim is to create a morse code tranlastor
//It should accept user input, so use "cin"
//It should display output, so use "cout"
//TMaybe use a dictionary to pair values from the Roman alphabet to Morse code 

#include <iostream>
#include <string>
using namespace std;

int main() {
    // Letters A-Z in order; used to match input characters
    string letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

    // Parallel array holds Morse equivalents by index
    string morse[] = {
        ".-","-...","-.-.","-..",".","..-.","--.","....","..",
        ".---","-.-",".-..","--","-.","---",".--.","--.-",".-.",
        "...","-","..-","...-",".--","-..-","-.--","--.."
    };

    string input, fullMorse = "";
    getline(cin, input); // Accept full input line from user
 string input, fullMorse = "";
    getline(cin, input); // Accept full input line from user

    for (int i = 0; i < input.size(); i++) {
        char ch = toupper(input[i]); // Treat input as uppercase
        // Only process letters â€” skip numbers, punctuation, space
        for (int j = 0; j < 26; j++) {
            if (ch == letters[j]) {
                cout << ch << " -> " << morse[j] << endl; // Per-letter output
                fullMorse += morse[j];
                fullMorse += " "; // Add space to separate codes
            }
        }
    }

    // After individual translation, show full Morse string
    cout << endl << fullMorse << endl;
    return 0;
}
